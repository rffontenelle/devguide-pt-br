# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2022, Python Software Foundation
# This file is distributed under the same license as the Python Developer's
# Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Developer's Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-08 22:51-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../advanced-tools/coverity.rst:5
msgid "Coverity Scan"
msgstr ""

#: ../../advanced-tools/coverity.rst:7
msgid ""
"Coverity Scan is a free service for static code analysis of Open Source "
"projects. It is based on Coverity's commercial product and is able to "
"analyze C, C++ and Java code."
msgstr ""

#: ../../advanced-tools/coverity.rst:11
msgid ""
"Coverity's static code analysis doesn't run the code. Instead of that it "
"uses abstract interpretation to gain information about the code's control"
" flow and data flow. It's able to follow all possible code paths that a "
"program may take. For example the analyzer understands that ``malloc()`` "
"returns a memory that must be freed with ``free()`` later. It follows all"
" branches and function calls to see if all possible combinations free the"
" memory. The analyzer is able to detect all sorts of issues like resource"
" leaks (memory, file descriptors), NULL dereferencing, use after free, "
"unchecked return values, dead code, buffer overflows, integer overflows, "
"uninitialized variables, and many more."
msgstr ""

#: ../../advanced-tools/coverity.rst:24
msgid "Access to analysis reports"
msgstr ""

#: ../../advanced-tools/coverity.rst:26
msgid ""
"The results are available on the `Coverity Scan`_ website. In order to "
"access the results you have to create an account yourself. Then go to "
"*Projects using Scan* and add yourself to the Python project. New members"
" must be approved by an admin (see `Contact`_)."
msgstr ""

#: ../../advanced-tools/coverity.rst:31
msgid ""
"Access is restricted to Python core developers only. Other individuals "
"may be given access at our own discretion, too. Every now and then "
"Coverity detects a critical issue in Python's code -- new analyzers may "
"even find new bugs in mature code. We don't want to disclose issues "
"prematurely."
msgstr ""

#: ../../advanced-tools/coverity.rst:38
msgid "Building and uploading analysis"
msgstr ""

#: ../../advanced-tools/coverity.rst:40
msgid ""
"The process is automated. A script checks out the code, runs ``cov-"
"build`` and uploads the latest analysis to Coverity. Since Coverity has "
"limited the maximum number of builds per week Python is analyzed every "
"second day. The build runs on a dedicated virtual machine on PSF's "
"infrastructure at OSU Open Source Labs. The process is maintained by "
"Christian Heimes (see `Contact`_). At present only the tip is analyzed "
"with the 64bit Linux tools."
msgstr ""

#: ../../advanced-tools/coverity.rst:49
msgid "Known limitations"
msgstr ""

#: ../../advanced-tools/coverity.rst:51
msgid "Some aspects of Python's C code are not yet understood by Coverity."
msgstr ""

#: ../../advanced-tools/coverity.rst:54
msgid "False positives"
msgstr ""

#: ../../advanced-tools/coverity.rst:59
msgid "``Py_BuildValue(\"N\", PyObject*)``"
msgstr ""

#: ../../advanced-tools/coverity.rst:57
msgid ""
"Coverity doesn't understand that ``N`` format char passes the object "
"along without touching its reference count. On this ground the analyzer "
"detects a resource leak. CID 719685"
msgstr ""

#: ../../advanced-tools/coverity.rst:64
msgid "``PyLong_FromLong()`` for negative values"
msgstr ""

#: ../../advanced-tools/coverity.rst:62
msgid ""
"Coverity claims that ``PyLong_FromLong()`` and other ``PyLong_From*()`` "
"functions cannot handle a negative value because the value might be used "
"as an array index in ``get_small_int()``. CID 486783"
msgstr ""

#: ../../advanced-tools/coverity.rst:68
msgid "``PyLong_FromLong()`` for n in [-5 ... +255]"
msgstr ""

#: ../../advanced-tools/coverity.rst:67
msgid ""
"For integers in the range of Python's small int cache the "
"``PyLong_From*()`` function can never fail and never returns NULL. CID "
"1058291"
msgstr ""

#: ../../advanced-tools/coverity.rst:75
msgid "``PyArg_ParseTupleAndKeywords(args, kwargs, \"s#\", &data, &length)``"
msgstr ""

#: ../../advanced-tools/coverity.rst:71
msgid ""
"Some functions use the format char combination such as ``s#``, ``u#`` or "
"``z#`` to get data and length of a character array. Coverity doesn't "
"recognize the relation between data and length. Sometimes it detects a "
"buffer overflow if data is written to a fixed size buffer although "
"``length <= sizeof(buffer)``.  CID 486613"
msgstr ""

#: ../../advanced-tools/coverity.rst:81
msgid "``path_converter()`` dereferencing after null check"
msgstr ""

#: ../../advanced-tools/coverity.rst:78
msgid ""
"The ``path_converter()`` function in ``posixmodule.c`` makes sure that "
"either ``path_t.narrow`` or ``path_t.wide`` is filled unless "
"``path_t.nullable`` is explicitly enabled. CID 719648"
msgstr ""

#: ../../advanced-tools/coverity.rst:84
msgid "Modeling"
msgstr ""

#: ../../advanced-tools/coverity.rst:86
msgid ""
"Modeling is explained in the *Coverity Help Center* which is available in"
" the help menu of `Coverity Connect`_. `coverity_model.c`_ contains a "
"copy of Python's modeling file for Coverity. Please keep the copy in sync"
" with the model file in *Analysis Settings* of `Coverity Scan`_."
msgstr ""

#: ../../advanced-tools/coverity.rst:93
msgid "Workflow"
msgstr ""

#: ../../advanced-tools/coverity.rst:96
msgid "False positive and intentional issues"
msgstr ""

#: ../../advanced-tools/coverity.rst:98
msgid ""
"If the problem is listed under `Known limitations`_ then please set the "
"classification to either \"False positive\" or \"Intentional\", the "
"action to \"Ignore\", owner to your own account and add a comment why the"
" issue is considered false positive or intentional."
msgstr ""

#: ../../advanced-tools/coverity.rst:103
msgid ""
"If you think it's a new false positive or intentional then please contact"
" an admin. The first step should be an updated to Python's `Modeling`_ "
"file."
msgstr ""

#: ../../advanced-tools/coverity.rst:108
msgid "Positive issues"
msgstr ""

#: ../../advanced-tools/coverity.rst:110
msgid ""
"You should always create an issue unless it's really a trivial case. "
"Please add the full url to the ticket under *Ext. Reference* and add the "
"CID (Coverity ID) to both the ticket and the checkin message. It makes it"
" much easier to understand the relation between tickets, fixes and "
"Coverity issues."
msgstr ""

#: ../../advanced-tools/coverity.rst:117
msgid "Contact"
msgstr ""

#: ../../advanced-tools/coverity.rst:119
msgid ""
"Please include both Brett and Christian in any mail regarding Coverity. "
"Mails to Coverity should go through Brett or Christian, too."
msgstr ""

#: ../../advanced-tools/coverity.rst:123
msgid "Christian Heimes <christian (at) python (dot) org>"
msgstr ""

#: ../../advanced-tools/coverity.rst:123
msgid ""
"admin, maintainer of build machine, intermediary between Python and "
"Coverity"
msgstr ""

#: ../../advanced-tools/coverity.rst:126
msgid "Brett Cannon <brett (at) python (dot) org>"
msgstr ""

#: ../../advanced-tools/coverity.rst:126
msgid "co-admin"
msgstr ""

#: ../../advanced-tools/coverity.rst:130
msgid "Dakshesh Vyas <scan-admin@coverity.com>"
msgstr ""

#: ../../advanced-tools/coverity.rst:129
msgid "Technical Manager - Coverity Scan"
msgstr ""

#: ../../advanced-tools/coverity.rst:134
msgid "`Coverity Scan FAQ <https://scan.coverity.com/faq/>`_"
msgstr ""

